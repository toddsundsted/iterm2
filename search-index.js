crystal_doc_search_index_callback({"repository_name":"iterm2","body":"# iterm2\n\n[![GitHub Release](https://img.shields.io/github/release/toddsundsted/iterm2.svg)](https://github.com/toddsundsted/iterm2/releases)\n[![Build Status](https://travis-ci.org/toddsundsted/iterm2.svg?branch=master)](https://travis-ci.org/toddsundsted/iterm2)\n[![Documentation](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://toddsundsted.github.io/iterm2/)\n\nDisplays images within the terminal using the ITerm2 [Inline Images\n Protocol](https://iterm2.com/documentation-images.html).\n\nRequires [ITerm2](https://iterm2.com/).\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  iterm2:\n    github: toddsundsted/iterm2\n```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"iterm2\"\n\nFile.open(\"unicorn.png\") do |file|\n  Iterm2.new.display(file)\nend\n```\n\nThe `#display` method also accepts a block and yields an instance of\n`IO` that may be written to. See the documentation for the full API.\n\n## Contributors\n\n- [Todd Sundsted](https://github.com/toddsundsted) - creator and maintainer\n","program":{"html_id":"iterm2/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"iterm2","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"iterm2/Iterm2","path":"Iterm2.html","kind":"class","full_name":"Iterm2","name":"Iterm2","abstract":false,"superclass":{"html_id":"iterm2/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"iterm2/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"iterm2/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/iterm2.cr","line_number":4,"url":"https://github.com/toddsundsted/iterm2/blob/v0.2.1/src/iterm2.cr#L4"}],"repository_name":"iterm2","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Display images within the terminal using the ITerm2 [Inline Images\nProtocol](https://iterm2.com/documentation-images.html).\n","summary":"<p>Display images within the terminal using the ITerm2 <a href=\"https://iterm2.com/documentation-images.html\">Inline Images Protocol</a>.</p>","class_methods":[],"constructors":[{"id":"new(output:IO=STDOUT)-class-method","html_id":"new(output:IO=STDOUT)-class-method","name":"new","doc":"Creates a new instance.\n","summary":"<p>Creates a new instance.</p>","abstract":false,"args":[{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":"IO"}],"args_string":"(output : IO = <span class=\"t\">STDOUT</span>)","args_html":"(output : IO = <span class=\"t\">STDOUT</span>)","location":{"filename":"src/iterm2.cr","line_number":10,"url":"https://github.com/toddsundsted/iterm2/blob/v0.2.1/src/iterm2.cr#L10"},"def":{"name":"new","args":[{"name":"output","doc":null,"default_value":"STDOUT","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(output)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display(input:IO,name=nil,size=nil,width=nil,height=nil,preserve_aspect_ratio=true,inline=true)-instance-method","html_id":"display(input:IO,name=nil,size=nil,width=nil,height=nil,preserve_aspect_ratio=true,inline=true)-instance-method","name":"display","doc":"Wraps the supplied *input* in the protocol envelop and writes the\nresult to the output.\n\nBy default, ITerm2 will display supported image formats within the\nterminal. It will download unsupported image formats and non-image\ninputs.\n\nIf downloading, *name* is the filename of the downloaded file (it\ndefaults to \"Unnamed file\") and \"size\" is the file size in bytes\n(it is optional and only used by the ITerm2 progress indicator).\n\n*width* and *height* are the width and height with which to\ndisplay the image. *width* and *height* are specified by a number\nfollowed by an optional unit, or the word \"auto\". Units are pixels\n(\"px\") or the percent (\"%\") of the session's width or height. A\nnumber without a unit specifies character cells.\n\nIf *preserve_aspect_ratio* is false, then the image's inherent\naspect ratio will not be respected; otherwise, it will fill the\nspecified width and height as much as possible without stretching.\nIt defaults to `true`.\n\nIf *inline* is false, the input will be downloaded with no visual\nrepresentation in the terminal session. Otherwise, it will be\ndisplayed inline. It defaults to `true`.\n","summary":"<p>Wraps the supplied <em>input</em> in the protocol envelop and writes the result to the output.</p>","abstract":false,"args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"size","doc":null,"default_value":"nil","external_name":"size","restriction":""},{"name":"width","doc":null,"default_value":"nil","external_name":"width","restriction":""},{"name":"height","doc":null,"default_value":"nil","external_name":"height","restriction":""},{"name":"preserve_aspect_ratio","doc":null,"default_value":"true","external_name":"preserve_aspect_ratio","restriction":""},{"name":"inline","doc":null,"default_value":"true","external_name":"inline","restriction":""}],"args_string":"(input : IO, name = <span class=\"n\">nil</span>, size = <span class=\"n\">nil</span>, width = <span class=\"n\">nil</span>, height = <span class=\"n\">nil</span>, preserve_aspect_ratio = <span class=\"n\">true</span>, inline = <span class=\"n\">true</span>)","args_html":"(input : IO, name = <span class=\"n\">nil</span>, size = <span class=\"n\">nil</span>, width = <span class=\"n\">nil</span>, height = <span class=\"n\">nil</span>, preserve_aspect_ratio = <span class=\"n\">true</span>, inline = <span class=\"n\">true</span>)","location":{"filename":"src/iterm2.cr","line_number":39,"url":"https://github.com/toddsundsted/iterm2/blob/v0.2.1/src/iterm2.cr#L39"},"def":{"name":"display","args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"size","doc":null,"default_value":"nil","external_name":"size","restriction":""},{"name":"width","doc":null,"default_value":"nil","external_name":"width","restriction":""},{"name":"height","doc":null,"default_value":"nil","external_name":"height","restriction":""},{"name":"preserve_aspect_ratio","doc":null,"default_value":"true","external_name":"preserve_aspect_ratio","restriction":""},{"name":"inline","doc":null,"default_value":"true","external_name":"inline","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if input.responds_to?(:to_slice)\nelse\n  temp = input.responds_to?(:size) ? IO::Memory.new(input.size) : IO::Memory.new\n  IO.copy(input, temp)\n  input = temp\nend\nperform(input, name, size, width, height, preserve_aspect_ratio, inline)\nself\n"}},{"id":"display(name=nil,size=nil,width=nil,height=nil,preserve_aspect_ratio=true,inline=true,&)-instance-method","html_id":"display(name=nil,size=nil,width=nil,height=nil,preserve_aspect_ratio=true,inline=true,&)-instance-method","name":"display","doc":"Yields an `IO` instance; wraps data written to the instance in the\nprotocol envelop and writes the result to the output.\n\nBy default, ITerm2 will display supported image formats within the\nterminal. It will download unsupported image formats and non-image\ninputs.\n\nIf downloading, *name* is the filename of the downloaded file (it\ndefaults to \"Unnamed file\") and \"size\" is the file size in bytes\n(it is optional and only used by the ITerm2 progress indicator).\n\n*width* and *height* are the width and height with which to\ndisplay the image. *width* and *height* are specified by a number\nfollowed by an optional unit, or the word \"auto\". Units are pixels\n(\"px\") or the percent (\"%\") of the session's width or height. A\nnumber without a unit specifies character cells.\n\nIf *preserve_aspect_ratio* is false, then the image's inherent\naspect ratio will not be respected; otherwise, it will fill the\nspecified width and height as much as possible without stretching.\nIt defaults to `true`.\n\nIf *inline* is false, the input will be downloaded with no visual\nrepresentation in the terminal session. Otherwise, it will be\ndisplayed inline. It defaults to `true`.\n","summary":"<p>Yields an <code>IO</code> instance; wraps data written to the instance in the protocol envelop and writes the result to the output.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"size","doc":null,"default_value":"nil","external_name":"size","restriction":""},{"name":"width","doc":null,"default_value":"nil","external_name":"width","restriction":""},{"name":"height","doc":null,"default_value":"nil","external_name":"height","restriction":""},{"name":"preserve_aspect_ratio","doc":null,"default_value":"true","external_name":"preserve_aspect_ratio","restriction":""},{"name":"inline","doc":null,"default_value":"true","external_name":"inline","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, size = <span class=\"n\">nil</span>, width = <span class=\"n\">nil</span>, height = <span class=\"n\">nil</span>, preserve_aspect_ratio = <span class=\"n\">true</span>, inline = <span class=\"n\">true</span>, &)","args_html":"(name = <span class=\"n\">nil</span>, size = <span class=\"n\">nil</span>, width = <span class=\"n\">nil</span>, height = <span class=\"n\">nil</span>, preserve_aspect_ratio = <span class=\"n\">true</span>, inline = <span class=\"n\">true</span>, &)","location":{"filename":"src/iterm2.cr","line_number":79,"url":"https://github.com/toddsundsted/iterm2/blob/v0.2.1/src/iterm2.cr#L79"},"def":{"name":"display","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""},{"name":"size","doc":null,"default_value":"nil","external_name":"size","restriction":""},{"name":"width","doc":null,"default_value":"nil","external_name":"width","restriction":""},{"name":"height","doc":null,"default_value":"nil","external_name":"height","restriction":""},{"name":"preserve_aspect_ratio","doc":null,"default_value":"true","external_name":"preserve_aspect_ratio","restriction":""},{"name":"inline","doc":null,"default_value":"true","external_name":"inline","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"input = IO::Memory.new\nyield input\nperform(input, name, size, width, height, preserve_aspect_ratio, inline)\nself\n"}}],"macros":[],"types":[]}]}})